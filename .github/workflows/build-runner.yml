name: üêã Build Docker GitHub Actions Runner

on:
  workflow_dispatch:
    inputs:
      workload_set_version:
        description: 'Specific workload set version to use'
        required: false
        type: string
  repository_dispatch:
    types: [trigger-runner-build]

env:
  DOCKER_REPOSITORY: redth/maui-actions-runner

jobs:
  build-windows:
    name: üêã Build Windows Runner (API ${{ matrix.DOTNET_VERSION }})
    runs-on: windows-latest

    strategy:
      matrix:
        DOTNET_VERSION: [ "9.0" ]

    steps:
    - name: üõí Checkout
      uses: actions/checkout@v3

    - name: ÔøΩ Set Variables
      id: vars
      run: |
        # Determine workload set version from either workflow_dispatch input or repository_dispatch payload
        if ("${{ github.event_name }}" -eq "repository_dispatch") {
          $env:WORKLOAD_SET_VERSION = "${{ github.event.client_payload.workload_set_version }}"
        } else {
          $env:WORKLOAD_SET_VERSION = "${{ inputs.workload_set_version }}"
        }
        echo "workload_set_version=$env:WORKLOAD_SET_VERSION" >> $env:GITHUB_OUTPUT
        Write-Host "Using workload set version: $env:WORKLOAD_SET_VERSION"

    - name: ÔøΩüêã DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: üî® Build Docker Image
      shell: pwsh
      working-directory: ./runner/windows/
      run: |
        # Build arguments
        $buildArgs = @{
          DotNetVersion     = "${{ matrix.DOTNET_VERSION }}"
          Version           = "${{ github.run_id }}"
          DockerRepository  = "${{ env.DOCKER_REPOSITORY }}"
          Load              = $true
        }
        
        if ("${{ github.ref }}" -eq "refs/heads/main") {
          $buildArgs.Push = $true
        }
        
        # Add workload set version if specified
        if ("${{ steps.vars.outputs.workload_set_version }}" -ne "") {
          $buildArgs.WorkloadSetVersion = "${{ steps.vars.outputs.workload_set_version }}"
        }
        
        ./build.ps1 @buildArgs



  build-linux:
    name: üêã Build Linux Runner (API ${{ matrix.DOTNET_VERSION }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        DOTNET_VERSION: [ "9.0" ]

    steps:
    - name: üõí Checkout
      uses: actions/checkout@v3

    - name: ÔøΩ Set Variables
      id: vars
      run: |
        # Determine workload set version from either workflow_dispatch input or repository_dispatch payload
        if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
          WORKLOAD_SET_VERSION="${{ github.event.client_payload.workload_set_version }}"
        else
          WORKLOAD_SET_VERSION="${{ inputs.workload_set_version }}"
        fi
        echo "workload_set_version=$WORKLOAD_SET_VERSION" >> $GITHUB_OUTPUT
        echo "Using workload set version: $WORKLOAD_SET_VERSION"

    - name: ÔøΩüêã DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: üî® Build Docker Image
      shell: pwsh
      working-directory: ./runner/linux/
      run: |
        
        # Build arguments
        $buildArgs = @{
          DotNetVersion     = "${{ matrix.DOTNET_VERSION }}"
          Version           = "${{ github.run_id }}"
          DockerRepository  = "${{ env.DOCKER_REPOSITORY }}"
          Load              = $true
        }
        
        if ("${{ github.ref }}" -eq "refs/heads/main") {
          $buildArgs.Push = $true
        }
        
        # Add workload set version if specified
        if ("${{ steps.vars.outputs.workload_set_version }}" -ne "") {
          $buildArgs.WorkloadSetVersion = "${{ steps.vars.outputs.workload_set_version }}"
        }
        
        ./build.ps1 @buildArgs
